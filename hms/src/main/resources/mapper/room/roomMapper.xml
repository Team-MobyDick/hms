<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mobydick.hms.room.dao.RoomDAO">

    <!-- 전체 객실 조회 -->
    <select id="selectAllRooms" resultType="com.mobydick.hms.room.vo.RoomVO">
                SELECT
                    A.ROOM_ID,
                    A.ROOM_NAME,
                    A.ROOM_CLASS,
                    A.ROOM_CLASSNAME,
                    A.CREATED_DATE,
                    A.CREATED_ID,
                    A.UPDATED_DATE,
                    A.UPDATED_ID,
                    CASE
                        WHEN COUNT(B.WORKD_NAME) > 3 THEN
                            -- 첫 3개만 출력하고 나머지는 '...'
                            SUBSTR(LISTAGG(CASE WHEN B.WORKD_NAME IS NULL THEN '' ELSE B.WORKD_NAME END, ', ') WITHIN GROUP (ORDER BY B.WORKD_NAME), 1,
                                   INSTR(LISTAGG(CASE WHEN B.WORKD_NAME IS NULL THEN '' ELSE B.WORKD_NAME END, ', ')
                                             WITHIN GROUP (ORDER BY B.WORKD_NAME), ',', 3) - 1) || '...'
                        ELSE
                            LISTAGG(CASE WHEN B.WORKD_NAME IS NULL THEN '' ELSE B.WORKD_NAME END, ', ') WITHIN GROUP (ORDER BY B.WORKD_NAME)
                END AS WORKD_NAME,

            CASE
                WHEN COUNT(C.EMPL_NAME) > 3 THEN
                    -- 첫 3개만 출력하고 나머지는 '...'
                    SUBSTR(LISTAGG(CASE WHEN C.EMPL_NAME IS NULL THEN '' ELSE C.EMPL_NAME || '(' || C.EMPL_ID || ')' END, ', ') WITHIN GROUP (ORDER BY C.EMPL_NAME), 1,
                           INSTR(LISTAGG(CASE WHEN C.EMPL_NAME IS NULL THEN '' ELSE C.EMPL_NAME || '(' || C.EMPL_ID || ')' END, ', ')
                           WITHIN GROUP (ORDER BY C.EMPL_NAME), ',', 3) - 1) || '...'
                ELSE
                    LISTAGG(CASE WHEN C.EMPL_NAME IS NULL THEN '' ELSE C.EMPL_NAME || '(' || C.EMPL_ID || ')' END, ', ') WITHIN GROUP (ORDER BY C.EMPL_NAME)
                END AS EMPL_NAME
        FROM
            TB_ROOM A
            LEFT JOIN TB_WORK_D B
                ON A.ROOM_ID = B.ROOM_ID
            <![CDATA[
                AND B.WORKD_DATE >= TRUNC(SYSDATE)
                AND B.WORKD_DATE < TRUNC(SYSDATE) + 1
            ]]>
            LEFT JOIN TB_EMPL C
                ON B.EMPL_ID = C.EMPL_ID
        GROUP BY
            A.ROOM_ID,
            A.ROOM_NAME,
            A.ROOM_CLASS,
            A.ROOM_CLASSNAME,
            A.CREATED_DATE,
            A.CREATED_ID,
            A.UPDATED_DATE,
            A.UPDATED_ID
        ORDER BY
            A.ROOM_CLASS

    </select>

    <!-- 객실 세부 조회 -->
    <select id="selectRoomById" resultType="com.mobydick.hms.room.vo.RoomVO">
                SELECT
                    A.ROOM_ID,
                    A.ROOM_NAME,
                    A.ROOM_CLASS,
                    A.ROOM_CLASSNAME,
                    A.CREATED_DATE,
                    A.CREATED_ID,
                    A.UPDATED_DATE,
                    A.UPDATED_ID,
                    LISTAGG(
                        CASE WHEN
                            B.WORKD_NAME IS NULL THEN ''
                            ELSE B.WORKD_NAME
                            END, ', ')
                        WITHIN
                        GROUP (ORDER BY B.WORKD_NAME) AS WORKD_NAME,
                    LISTAGG(
                        CASE WHEN
                        C.EMPL_NAME IS NULL THEN ''
                        ELSE C.EMPL_NAME || '(' || C.EMPL_ID || ')' END, ', ')
                        WITHIN GROUP (ORDER BY C.EMPL_NAME) AS EMPL_NAME
                FROM
                    TB_ROOM A
                    LEFT JOIN TB_WORK_D B
                        ON A.ROOM_ID = B.ROOM_ID
                    LEFT JOIN TB_EMPL C
                        ON B.EMPL_ID = C.EMPL_ID
                <where>
                     <if test="roomId != null and roomId != ''">
                        A.ROOM_ID = #{roomId}
                     </if>
                </where>
                GROUP BY
                    A.ROOM_ID,
                    A.ROOM_NAME,
                    A.ROOM_CLASS,
                    A.ROOM_CLASSNAME,
                    A.CREATED_DATE,
                    A.CREATED_ID,
                    A.UPDATED_DATE,
                    A.UPDATED_ID
                ORDER BY A.ROOM_CLASS
    </select>

    <!-- 객실 필터링 -->
    <select id="selectRoomsByType" parameterType="String" resultType="com.mobydick.hms.room.vo.RoomVO">
        SELECT
               ROOM_ID,
               ROOM_NAME,
               ROOM_CLASS,
               ROOM_CLASSNAME,
               CREATED_DATE,
               CREATED_ID,
               UPDATED_DATE,
               UPDATED_ID
        FROM TB_ROOM
            WHERE ROOM_CLASS = #{roomType}
    </select>

    <!-- 객실 등록 -->
    <insert id="insertRoom" parameterType="com.mobydick.hms.room.vo.RoomVO">
        INSERT INTO TB_ROOM (
            ROOM_ID,
            ROOM_NAME,
            ROOM_CLASS,
            ROOM_CLASSNAME,
            CREATED_DATE,
            CREATED_ID,
            UPDATED_DATE,
            UPDATED_ID
        ) VALUES (
             #{roomId},
             #{roomName},
             #{roomClass},
             #{roomClassName},
             SYSDATE,
             #{createdId},
             SYSDATE,
             #{updatedId}
                 )
    </insert>

    <!-- 객실 수정 -->
    <update id="roomUpdate">
        UPDATE TB_ROOM SET
                           ROOM_NAME = #{roomName},
                           ROOM_CLASS = #{roomClass},
                           ROOM_CLASSNAME = #{roomClassName},
                           UPDATED_DATE = SYSDATE,
                           UPDATED_ID = #{updatedId}
        WHERE ROOM_ID = #{roomId}
    </update>

    <!-- 객실 삭제 -->
    <delete id="roomDelete">
        DELETE
            FROM TB_ROOM
        WHERE ROOM_ID = #{roomId}
    </delete>

</mapper>
